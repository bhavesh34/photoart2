#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="photoart")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertauction_finish(auction_finish instance);
  partial void Updateauction_finish(auction_finish instance);
  partial void Deleteauction_finish(auction_finish instance);
  partial void Insertauction_reg(auction_reg instance);
  partial void Updateauction_reg(auction_reg instance);
  partial void Deleteauction_reg(auction_reg instance);
  partial void Insertbid_transaction(bid_transaction instance);
  partial void Updatebid_transaction(bid_transaction instance);
  partial void Deletebid_transaction(bid_transaction instance);
  partial void Insertbuyer(buyer instance);
  partial void Updatebuyer(buyer instance);
  partial void Deletebuyer(buyer instance);
  partial void Insertcatagory(catagory instance);
  partial void Updatecatagory(catagory instance);
  partial void Deletecatagory(catagory instance);
  partial void Insertcountry(country instance);
  partial void Updatecountry(country instance);
  partial void Deletecountry(country instance);
  partial void Insertorder_info(order_info instance);
  partial void Updateorder_info(order_info instance);
  partial void Deleteorder_info(order_info instance);
  partial void Insertproduct(product instance);
  partial void Updateproduct(product instance);
  partial void Deleteproduct(product instance);
  partial void Insertseller(seller instance);
  partial void Updateseller(seller instance);
  partial void Deleteseller(seller instance);
  partial void Insertstate(state instance);
  partial void Updatestate(state instance);
  partial void Deletestate(state instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["photoartConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<admin_login> admin_logins
	{
		get
		{
			return this.GetTable<admin_login>();
		}
	}
	
	public System.Data.Linq.Table<auction_finish> auction_finishes
	{
		get
		{
			return this.GetTable<auction_finish>();
		}
	}
	
	public System.Data.Linq.Table<auction_reg> auction_regs
	{
		get
		{
			return this.GetTable<auction_reg>();
		}
	}
	
	public System.Data.Linq.Table<bid_transaction> bid_transactions
	{
		get
		{
			return this.GetTable<bid_transaction>();
		}
	}
	
	public System.Data.Linq.Table<buyer> buyers
	{
		get
		{
			return this.GetTable<buyer>();
		}
	}
	
	public System.Data.Linq.Table<catagory> catagories
	{
		get
		{
			return this.GetTable<catagory>();
		}
	}
	
	public System.Data.Linq.Table<city> cities
	{
		get
		{
			return this.GetTable<city>();
		}
	}
	
	public System.Data.Linq.Table<country> countries
	{
		get
		{
			return this.GetTable<country>();
		}
	}
	
	public System.Data.Linq.Table<News_feed> News_feeds
	{
		get
		{
			return this.GetTable<News_feed>();
		}
	}
	
	public System.Data.Linq.Table<order_info> order_infos
	{
		get
		{
			return this.GetTable<order_info>();
		}
	}
	
	public System.Data.Linq.Table<product> products
	{
		get
		{
			return this.GetTable<product>();
		}
	}
	
	public System.Data.Linq.Table<seller> sellers
	{
		get
		{
			return this.GetTable<seller>();
		}
	}
	
	public System.Data.Linq.Table<state> states
	{
		get
		{
			return this.GetTable<state>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedure1")]
	public ISingleResult<StoredProcedure1Result> StoredProcedure1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password);
		return ((ISingleResult<StoredProcedure1Result>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoredProcedure3")]
	public ISingleResult<StoredProcedure3Result> StoredProcedure3()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<StoredProcedure3Result>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin_login")]
public partial class admin_login
{
	
	private string _username;
	
	private string _password;
	
	public admin_login()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this._username = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this._password = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.auction_finish")]
public partial class auction_finish : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _p_id;
	
	private System.Nullable<int> _s_id;
	
	private System.Nullable<decimal> _final_amt;
	
	private System.Nullable<System.DateTime> _closing_date;
	
	private System.Nullable<bool> _seller_notify;
	
	private System.Nullable<bool> _bidder_notify;
	
	private EntityRef<auction_finish> _auction_finish2;
	
	private EntityRef<auction_finish> _auction_finish1;
	
	private EntityRef<product> _product;
	
	private EntityRef<seller> _seller;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onp_idChanging(System.Nullable<int> value);
    partial void Onp_idChanged();
    partial void Ons_idChanging(System.Nullable<int> value);
    partial void Ons_idChanged();
    partial void Onfinal_amtChanging(System.Nullable<decimal> value);
    partial void Onfinal_amtChanged();
    partial void Onclosing_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onclosing_dateChanged();
    partial void Onseller_notifyChanging(System.Nullable<bool> value);
    partial void Onseller_notifyChanged();
    partial void Onbidder_notifyChanging(System.Nullable<bool> value);
    partial void Onbidder_notifyChanged();
    #endregion
	
	public auction_finish()
	{
		this._auction_finish2 = default(EntityRef<auction_finish>);
		this._auction_finish1 = default(EntityRef<auction_finish>);
		this._product = default(EntityRef<product>);
		this._seller = default(EntityRef<seller>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				if (this._auction_finish1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int")]
	public System.Nullable<int> p_id
	{
		get
		{
			return this._p_id;
		}
		set
		{
			if ((this._p_id != value))
			{
				if (this._product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onp_idChanging(value);
				this.SendPropertyChanging();
				this._p_id = value;
				this.SendPropertyChanged("p_id");
				this.Onp_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_id", DbType="Int")]
	public System.Nullable<int> s_id
	{
		get
		{
			return this._s_id;
		}
		set
		{
			if ((this._s_id != value))
			{
				if (this._seller.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Ons_idChanging(value);
				this.SendPropertyChanging();
				this._s_id = value;
				this.SendPropertyChanged("s_id");
				this.Ons_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_final_amt", DbType="Money")]
	public System.Nullable<decimal> final_amt
	{
		get
		{
			return this._final_amt;
		}
		set
		{
			if ((this._final_amt != value))
			{
				this.Onfinal_amtChanging(value);
				this.SendPropertyChanging();
				this._final_amt = value;
				this.SendPropertyChanged("final_amt");
				this.Onfinal_amtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closing_date", DbType="Date")]
	public System.Nullable<System.DateTime> closing_date
	{
		get
		{
			return this._closing_date;
		}
		set
		{
			if ((this._closing_date != value))
			{
				this.Onclosing_dateChanging(value);
				this.SendPropertyChanging();
				this._closing_date = value;
				this.SendPropertyChanged("closing_date");
				this.Onclosing_dateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_notify", DbType="Bit")]
	public System.Nullable<bool> seller_notify
	{
		get
		{
			return this._seller_notify;
		}
		set
		{
			if ((this._seller_notify != value))
			{
				this.Onseller_notifyChanging(value);
				this.SendPropertyChanging();
				this._seller_notify = value;
				this.SendPropertyChanged("seller_notify");
				this.Onseller_notifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bidder_notify", DbType="Bit")]
	public System.Nullable<bool> bidder_notify
	{
		get
		{
			return this._bidder_notify;
		}
		set
		{
			if ((this._bidder_notify != value))
			{
				this.Onbidder_notifyChanging(value);
				this.SendPropertyChanging();
				this._bidder_notify = value;
				this.SendPropertyChanged("bidder_notify");
				this.Onbidder_notifyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="auction_finish_auction_finish", Storage="_auction_finish2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
	public auction_finish auction_finish2
	{
		get
		{
			return this._auction_finish2.Entity;
		}
		set
		{
			auction_finish previousValue = this._auction_finish2.Entity;
			if (((previousValue != value) 
						|| (this._auction_finish2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._auction_finish2.Entity = null;
					previousValue.auction_finish1 = null;
				}
				this._auction_finish2.Entity = value;
				if ((value != null))
				{
					value.auction_finish1 = this;
				}
				this.SendPropertyChanged("auction_finish2");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="auction_finish_auction_finish", Storage="_auction_finish1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
	public auction_finish auction_finish1
	{
		get
		{
			return this._auction_finish1.Entity;
		}
		set
		{
			auction_finish previousValue = this._auction_finish1.Entity;
			if (((previousValue != value) 
						|| (this._auction_finish1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._auction_finish1.Entity = null;
					previousValue.auction_finish2 = null;
				}
				this._auction_finish1.Entity = value;
				if ((value != null))
				{
					value.auction_finish2 = this;
					this._id = value.id;
				}
				else
				{
					this._id = default(int);
				}
				this.SendPropertyChanged("auction_finish1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_auction_finish", Storage="_product", ThisKey="p_id", OtherKey="pid", IsForeignKey=true)]
	public product product
	{
		get
		{
			return this._product.Entity;
		}
		set
		{
			product previousValue = this._product.Entity;
			if (((previousValue != value) 
						|| (this._product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._product.Entity = null;
					previousValue.auction_finishes.Remove(this);
				}
				this._product.Entity = value;
				if ((value != null))
				{
					value.auction_finishes.Add(this);
					this._p_id = value.pid;
				}
				else
				{
					this._p_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_auction_finish", Storage="_seller", ThisKey="s_id", OtherKey="id", IsForeignKey=true)]
	public seller seller
	{
		get
		{
			return this._seller.Entity;
		}
		set
		{
			seller previousValue = this._seller.Entity;
			if (((previousValue != value) 
						|| (this._seller.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._seller.Entity = null;
					previousValue.auction_finishes.Remove(this);
				}
				this._seller.Entity = value;
				if ((value != null))
				{
					value.auction_finishes.Add(this);
					this._s_id = value.id;
				}
				else
				{
					this._s_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("seller");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.auction_reg")]
public partial class auction_reg : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _pid;
	
	private int _sid;
	
	private System.Nullable<int> _expected_price;
	
	private int _minimum_increment;
	
	private string _auction_type;
	
	private EntityRef<product> _product;
	
	private EntityRef<seller> _seller;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnsidChanging(int value);
    partial void OnsidChanged();
    partial void Onexpected_priceChanging(System.Nullable<int> value);
    partial void Onexpected_priceChanged();
    partial void Onminimum_incrementChanging(int value);
    partial void Onminimum_incrementChanged();
    partial void Onauction_typeChanging(string value);
    partial void Onauction_typeChanged();
    #endregion
	
	public auction_reg()
	{
		this._product = default(EntityRef<product>);
		this._seller = default(EntityRef<seller>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
	public int pid
	{
		get
		{
			return this._pid;
		}
		set
		{
			if ((this._pid != value))
			{
				if (this._product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnpidChanging(value);
				this.SendPropertyChanging();
				this._pid = value;
				this.SendPropertyChanged("pid");
				this.OnpidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Int NOT NULL")]
	public int sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				if (this._seller.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnsidChanging(value);
				this.SendPropertyChanging();
				this._sid = value;
				this.SendPropertyChanged("sid");
				this.OnsidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expected_price", DbType="Int")]
	public System.Nullable<int> expected_price
	{
		get
		{
			return this._expected_price;
		}
		set
		{
			if ((this._expected_price != value))
			{
				this.Onexpected_priceChanging(value);
				this.SendPropertyChanging();
				this._expected_price = value;
				this.SendPropertyChanged("expected_price");
				this.Onexpected_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minimum_increment", DbType="Int NOT NULL")]
	public int minimum_increment
	{
		get
		{
			return this._minimum_increment;
		}
		set
		{
			if ((this._minimum_increment != value))
			{
				this.Onminimum_incrementChanging(value);
				this.SendPropertyChanging();
				this._minimum_increment = value;
				this.SendPropertyChanged("minimum_increment");
				this.Onminimum_incrementChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auction_type", DbType="VarChar(50)")]
	public string auction_type
	{
		get
		{
			return this._auction_type;
		}
		set
		{
			if ((this._auction_type != value))
			{
				this.Onauction_typeChanging(value);
				this.SendPropertyChanging();
				this._auction_type = value;
				this.SendPropertyChanged("auction_type");
				this.Onauction_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_auction_reg", Storage="_product", ThisKey="pid", OtherKey="pid", IsForeignKey=true)]
	public product product
	{
		get
		{
			return this._product.Entity;
		}
		set
		{
			product previousValue = this._product.Entity;
			if (((previousValue != value) 
						|| (this._product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._product.Entity = null;
					previousValue.auction_regs.Remove(this);
				}
				this._product.Entity = value;
				if ((value != null))
				{
					value.auction_regs.Add(this);
					this._pid = value.pid;
				}
				else
				{
					this._pid = default(int);
				}
				this.SendPropertyChanged("product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_auction_reg", Storage="_seller", ThisKey="sid", OtherKey="id", IsForeignKey=true)]
	public seller seller
	{
		get
		{
			return this._seller.Entity;
		}
		set
		{
			seller previousValue = this._seller.Entity;
			if (((previousValue != value) 
						|| (this._seller.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._seller.Entity = null;
					previousValue.auction_regs.Remove(this);
				}
				this._seller.Entity = value;
				if ((value != null))
				{
					value.auction_regs.Add(this);
					this._sid = value.id;
				}
				else
				{
					this._sid = default(int);
				}
				this.SendPropertyChanged("seller");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bid_transaction")]
public partial class bid_transaction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _p_id;
	
	private System.Nullable<decimal> _min_bid;
	
	private System.Nullable<decimal> _min_intvalue;
	
	private System.Nullable<decimal> _last_bidvalue;
	
	private System.Nullable<System.DateTime> _closin_date;
	
	private EntityRef<product> _product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onp_idChanging(System.Nullable<int> value);
    partial void Onp_idChanged();
    partial void Onmin_bidChanging(System.Nullable<decimal> value);
    partial void Onmin_bidChanged();
    partial void Onmin_intvalueChanging(System.Nullable<decimal> value);
    partial void Onmin_intvalueChanged();
    partial void Onlast_bidvalueChanging(System.Nullable<decimal> value);
    partial void Onlast_bidvalueChanged();
    partial void Onclosin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onclosin_dateChanged();
    #endregion
	
	public bid_transaction()
	{
		this._product = default(EntityRef<product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int")]
	public System.Nullable<int> p_id
	{
		get
		{
			return this._p_id;
		}
		set
		{
			if ((this._p_id != value))
			{
				if (this._product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onp_idChanging(value);
				this.SendPropertyChanging();
				this._p_id = value;
				this.SendPropertyChanged("p_id");
				this.Onp_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_bid", DbType="Money")]
	public System.Nullable<decimal> min_bid
	{
		get
		{
			return this._min_bid;
		}
		set
		{
			if ((this._min_bid != value))
			{
				this.Onmin_bidChanging(value);
				this.SendPropertyChanging();
				this._min_bid = value;
				this.SendPropertyChanged("min_bid");
				this.Onmin_bidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_intvalue", DbType="Money")]
	public System.Nullable<decimal> min_intvalue
	{
		get
		{
			return this._min_intvalue;
		}
		set
		{
			if ((this._min_intvalue != value))
			{
				this.Onmin_intvalueChanging(value);
				this.SendPropertyChanging();
				this._min_intvalue = value;
				this.SendPropertyChanged("min_intvalue");
				this.Onmin_intvalueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_bidvalue", DbType="Money")]
	public System.Nullable<decimal> last_bidvalue
	{
		get
		{
			return this._last_bidvalue;
		}
		set
		{
			if ((this._last_bidvalue != value))
			{
				this.Onlast_bidvalueChanging(value);
				this.SendPropertyChanging();
				this._last_bidvalue = value;
				this.SendPropertyChanged("last_bidvalue");
				this.Onlast_bidvalueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closin_date", DbType="Date")]
	public System.Nullable<System.DateTime> closin_date
	{
		get
		{
			return this._closin_date;
		}
		set
		{
			if ((this._closin_date != value))
			{
				this.Onclosin_dateChanging(value);
				this.SendPropertyChanging();
				this._closin_date = value;
				this.SendPropertyChanged("closin_date");
				this.Onclosin_dateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_bid_transaction", Storage="_product", ThisKey="p_id", OtherKey="pid", IsForeignKey=true)]
	public product product
	{
		get
		{
			return this._product.Entity;
		}
		set
		{
			product previousValue = this._product.Entity;
			if (((previousValue != value) 
						|| (this._product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._product.Entity = null;
					previousValue.bid_transactions.Remove(this);
				}
				this._product.Entity = value;
				if ((value != null))
				{
					value.bid_transactions.Add(this);
					this._p_id = value.pid;
				}
				else
				{
					this._p_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.buyer")]
public partial class buyer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _NAME;
	
	private string _last;
	
	private string _email;
	
	private string _phone_no;
	
	private string _area_code;
	
	private System.Nullable<int> _cid;
	
	private System.Nullable<int> _sid;
	
	private System.Nullable<int> _ctid;
	
	private string _addrerss;
	
	private string _Password;
	
	private EntitySet<order_info> _order_infos;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnlastChanging(string value);
    partial void OnlastChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onphone_noChanging(string value);
    partial void Onphone_noChanged();
    partial void Onarea_codeChanging(string value);
    partial void Onarea_codeChanged();
    partial void OncidChanging(System.Nullable<int> value);
    partial void OncidChanged();
    partial void OnsidChanging(System.Nullable<int> value);
    partial void OnsidChanged();
    partial void OnctidChanging(System.Nullable<int> value);
    partial void OnctidChanged();
    partial void OnaddrerssChanging(string value);
    partial void OnaddrerssChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public buyer()
	{
		this._order_infos = new EntitySet<order_info>(new Action<order_info>(this.attach_order_infos), new Action<order_info>(this.detach_order_infos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
	public string NAME
	{
		get
		{
			return this._NAME;
		}
		set
		{
			if ((this._NAME != value))
			{
				this.OnNAMEChanging(value);
				this.SendPropertyChanging();
				this._NAME = value;
				this.SendPropertyChanged("NAME");
				this.OnNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last", DbType="VarChar(50)")]
	public string last
	{
		get
		{
			return this._last;
		}
		set
		{
			if ((this._last != value))
			{
				this.OnlastChanging(value);
				this.SendPropertyChanging();
				this._last = value;
				this.SendPropertyChanged("last");
				this.OnlastChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="VarChar(50)")]
	public string phone_no
	{
		get
		{
			return this._phone_no;
		}
		set
		{
			if ((this._phone_no != value))
			{
				this.Onphone_noChanging(value);
				this.SendPropertyChanging();
				this._phone_no = value;
				this.SendPropertyChanged("phone_no");
				this.Onphone_noChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area_code", DbType="VarChar(50)")]
	public string area_code
	{
		get
		{
			return this._area_code;
		}
		set
		{
			if ((this._area_code != value))
			{
				this.Onarea_codeChanging(value);
				this.SendPropertyChanging();
				this._area_code = value;
				this.SendPropertyChanged("area_code");
				this.Onarea_codeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Int")]
	public System.Nullable<int> cid
	{
		get
		{
			return this._cid;
		}
		set
		{
			if ((this._cid != value))
			{
				this.OncidChanging(value);
				this.SendPropertyChanging();
				this._cid = value;
				this.SendPropertyChanged("cid");
				this.OncidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Int")]
	public System.Nullable<int> sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				this.OnsidChanging(value);
				this.SendPropertyChanging();
				this._sid = value;
				this.SendPropertyChanged("sid");
				this.OnsidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctid", DbType="Int")]
	public System.Nullable<int> ctid
	{
		get
		{
			return this._ctid;
		}
		set
		{
			if ((this._ctid != value))
			{
				this.OnctidChanging(value);
				this.SendPropertyChanging();
				this._ctid = value;
				this.SendPropertyChanged("ctid");
				this.OnctidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addrerss", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string addrerss
	{
		get
		{
			return this._addrerss;
		}
		set
		{
			if ((this._addrerss != value))
			{
				this.OnaddrerssChanging(value);
				this.SendPropertyChanging();
				this._addrerss = value;
				this.SendPropertyChanged("addrerss");
				this.OnaddrerssChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="buyer_order_info", Storage="_order_infos", ThisKey="id", OtherKey="b_id")]
	public EntitySet<order_info> order_infos
	{
		get
		{
			return this._order_infos;
		}
		set
		{
			this._order_infos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_order_infos(order_info entity)
	{
		this.SendPropertyChanging();
		entity.buyer = this;
	}
	
	private void detach_order_infos(order_info entity)
	{
		this.SendPropertyChanging();
		entity.buyer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.catagory")]
public partial class catagory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _cat_name;
	
	private EntitySet<product> _products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncat_nameChanging(string value);
    partial void Oncat_nameChanged();
    #endregion
	
	public catagory()
	{
		this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_name", DbType="VarChar(50)")]
	public string cat_name
	{
		get
		{
			return this._cat_name;
		}
		set
		{
			if ((this._cat_name != value))
			{
				this.Oncat_nameChanging(value);
				this.SendPropertyChanging();
				this._cat_name = value;
				this.SendPropertyChanged("cat_name");
				this.Oncat_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="catagory_product", Storage="_products", ThisKey="id", OtherKey="cat_id")]
	public EntitySet<product> products
	{
		get
		{
			return this._products;
		}
		set
		{
			this._products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_products(product entity)
	{
		this.SendPropertyChanging();
		entity.catagory = this;
	}
	
	private void detach_products(product entity)
	{
		this.SendPropertyChanging();
		entity.catagory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
public partial class city
{
	
	private System.Nullable<int> _sid;
	
	private int _cid;
	
	private string _cname;
	
	public city()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Int")]
	public System.Nullable<int> sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				this._sid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int cid
	{
		get
		{
			return this._cid;
		}
		set
		{
			if ((this._cid != value))
			{
				this._cid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname", DbType="VarChar(50)")]
	public string cname
	{
		get
		{
			return this._cname;
		}
		set
		{
			if ((this._cname != value))
			{
				this._cname = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.country")]
public partial class country : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _cid;
	
	private string _cname;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OncnameChanging(string value);
    partial void OncnameChanged();
    #endregion
	
	public country()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int cid
	{
		get
		{
			return this._cid;
		}
		set
		{
			if ((this._cid != value))
			{
				this.OncidChanging(value);
				this.SendPropertyChanging();
				this._cid = value;
				this.SendPropertyChanged("cid");
				this.OncidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname", DbType="VarChar(50)")]
	public string cname
	{
		get
		{
			return this._cname;
		}
		set
		{
			if ((this._cname != value))
			{
				this.OncnameChanging(value);
				this.SendPropertyChanging();
				this._cname = value;
				this.SendPropertyChanged("cname");
				this.OncnameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[News feeds]")]
public partial class News_feed
{
	
	private int _Id;
	
	private string _Feed;
	
	public News_feed()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this._Id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feed", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Feed
	{
		get
		{
			return this._Feed;
		}
		set
		{
			if ((this._Feed != value))
			{
				this._Feed = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.order_info")]
public partial class order_info : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<int> _p_id;
	
	private System.Nullable<int> _s_id;
	
	private System.Nullable<int> _b_id;
	
	private EntityRef<buyer> _buyer;
	
	private EntityRef<product> _product;
	
	private EntityRef<seller> _seller;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onp_idChanging(System.Nullable<int> value);
    partial void Onp_idChanged();
    partial void Ons_idChanging(System.Nullable<int> value);
    partial void Ons_idChanged();
    partial void Onb_idChanging(System.Nullable<int> value);
    partial void Onb_idChanged();
    #endregion
	
	public order_info()
	{
		this._buyer = default(EntityRef<buyer>);
		this._product = default(EntityRef<product>);
		this._seller = default(EntityRef<seller>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", DbType="Int")]
	public System.Nullable<int> p_id
	{
		get
		{
			return this._p_id;
		}
		set
		{
			if ((this._p_id != value))
			{
				if (this._product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onp_idChanging(value);
				this.SendPropertyChanging();
				this._p_id = value;
				this.SendPropertyChanged("p_id");
				this.Onp_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_id", DbType="Int")]
	public System.Nullable<int> s_id
	{
		get
		{
			return this._s_id;
		}
		set
		{
			if ((this._s_id != value))
			{
				if (this._seller.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Ons_idChanging(value);
				this.SendPropertyChanging();
				this._s_id = value;
				this.SendPropertyChanged("s_id");
				this.Ons_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_id", DbType="Int")]
	public System.Nullable<int> b_id
	{
		get
		{
			return this._b_id;
		}
		set
		{
			if ((this._b_id != value))
			{
				if (this._buyer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onb_idChanging(value);
				this.SendPropertyChanging();
				this._b_id = value;
				this.SendPropertyChanged("b_id");
				this.Onb_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="buyer_order_info", Storage="_buyer", ThisKey="b_id", OtherKey="id", IsForeignKey=true)]
	public buyer buyer
	{
		get
		{
			return this._buyer.Entity;
		}
		set
		{
			buyer previousValue = this._buyer.Entity;
			if (((previousValue != value) 
						|| (this._buyer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._buyer.Entity = null;
					previousValue.order_infos.Remove(this);
				}
				this._buyer.Entity = value;
				if ((value != null))
				{
					value.order_infos.Add(this);
					this._b_id = value.id;
				}
				else
				{
					this._b_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("buyer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_order_info", Storage="_product", ThisKey="p_id", OtherKey="pid", IsForeignKey=true)]
	public product product
	{
		get
		{
			return this._product.Entity;
		}
		set
		{
			product previousValue = this._product.Entity;
			if (((previousValue != value) 
						|| (this._product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._product.Entity = null;
					previousValue.order_infos.Remove(this);
				}
				this._product.Entity = value;
				if ((value != null))
				{
					value.order_infos.Add(this);
					this._p_id = value.pid;
				}
				else
				{
					this._p_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_order_info", Storage="_seller", ThisKey="s_id", OtherKey="id", IsForeignKey=true)]
	public seller seller
	{
		get
		{
			return this._seller.Entity;
		}
		set
		{
			seller previousValue = this._seller.Entity;
			if (((previousValue != value) 
						|| (this._seller.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._seller.Entity = null;
					previousValue.order_infos.Remove(this);
				}
				this._seller.Entity = value;
				if ((value != null))
				{
					value.order_infos.Add(this);
					this._s_id = value.id;
				}
				else
				{
					this._s_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("seller");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pid;
	
	private string _pname;
	
	private string _product_descp;
	
	private System.Nullable<decimal> _price;
	
	private string _image;
	
	private System.Nullable<int> _seller_id;
	
	private System.Nullable<int> _cat_id;
	
	private EntitySet<auction_finish> _auction_finishes;
	
	private EntitySet<auction_reg> _auction_regs;
	
	private EntitySet<bid_transaction> _bid_transactions;
	
	private EntitySet<order_info> _order_infos;
	
	private EntityRef<catagory> _catagory;
	
	private EntityRef<seller> _seller;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnpnameChanging(string value);
    partial void OnpnameChanged();
    partial void Onproduct_descpChanging(string value);
    partial void Onproduct_descpChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void Onseller_idChanging(System.Nullable<int> value);
    partial void Onseller_idChanged();
    partial void Oncat_idChanging(System.Nullable<int> value);
    partial void Oncat_idChanged();
    #endregion
	
	public product()
	{
		this._auction_finishes = new EntitySet<auction_finish>(new Action<auction_finish>(this.attach_auction_finishes), new Action<auction_finish>(this.detach_auction_finishes));
		this._auction_regs = new EntitySet<auction_reg>(new Action<auction_reg>(this.attach_auction_regs), new Action<auction_reg>(this.detach_auction_regs));
		this._bid_transactions = new EntitySet<bid_transaction>(new Action<bid_transaction>(this.attach_bid_transactions), new Action<bid_transaction>(this.detach_bid_transactions));
		this._order_infos = new EntitySet<order_info>(new Action<order_info>(this.attach_order_infos), new Action<order_info>(this.detach_order_infos));
		this._catagory = default(EntityRef<catagory>);
		this._seller = default(EntityRef<seller>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pid
	{
		get
		{
			return this._pid;
		}
		set
		{
			if ((this._pid != value))
			{
				this.OnpidChanging(value);
				this.SendPropertyChanging();
				this._pid = value;
				this.SendPropertyChanged("pid");
				this.OnpidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pname", DbType="VarChar(50)")]
	public string pname
	{
		get
		{
			return this._pname;
		}
		set
		{
			if ((this._pname != value))
			{
				this.OnpnameChanging(value);
				this.SendPropertyChanging();
				this._pname = value;
				this.SendPropertyChanged("pname");
				this.OnpnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_descp", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string product_descp
	{
		get
		{
			return this._product_descp;
		}
		set
		{
			if ((this._product_descp != value))
			{
				this.Onproduct_descpChanging(value);
				this.SendPropertyChanging();
				this._product_descp = value;
				this.SendPropertyChanged("product_descp");
				this.Onproduct_descpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
	public System.Nullable<decimal> price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string image
	{
		get
		{
			return this._image;
		}
		set
		{
			if ((this._image != value))
			{
				this.OnimageChanging(value);
				this.SendPropertyChanging();
				this._image = value;
				this.SendPropertyChanged("image");
				this.OnimageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_id", DbType="Int")]
	public System.Nullable<int> seller_id
	{
		get
		{
			return this._seller_id;
		}
		set
		{
			if ((this._seller_id != value))
			{
				if (this._seller.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onseller_idChanging(value);
				this.SendPropertyChanging();
				this._seller_id = value;
				this.SendPropertyChanged("seller_id");
				this.Onseller_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="Int")]
	public System.Nullable<int> cat_id
	{
		get
		{
			return this._cat_id;
		}
		set
		{
			if ((this._cat_id != value))
			{
				if (this._catagory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Oncat_idChanging(value);
				this.SendPropertyChanging();
				this._cat_id = value;
				this.SendPropertyChanged("cat_id");
				this.Oncat_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_auction_finish", Storage="_auction_finishes", ThisKey="pid", OtherKey="p_id")]
	public EntitySet<auction_finish> auction_finishes
	{
		get
		{
			return this._auction_finishes;
		}
		set
		{
			this._auction_finishes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_auction_reg", Storage="_auction_regs", ThisKey="pid", OtherKey="pid")]
	public EntitySet<auction_reg> auction_regs
	{
		get
		{
			return this._auction_regs;
		}
		set
		{
			this._auction_regs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_bid_transaction", Storage="_bid_transactions", ThisKey="pid", OtherKey="p_id")]
	public EntitySet<bid_transaction> bid_transactions
	{
		get
		{
			return this._bid_transactions;
		}
		set
		{
			this._bid_transactions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_order_info", Storage="_order_infos", ThisKey="pid", OtherKey="p_id")]
	public EntitySet<order_info> order_infos
	{
		get
		{
			return this._order_infos;
		}
		set
		{
			this._order_infos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="catagory_product", Storage="_catagory", ThisKey="cat_id", OtherKey="id", IsForeignKey=true)]
	public catagory catagory
	{
		get
		{
			return this._catagory.Entity;
		}
		set
		{
			catagory previousValue = this._catagory.Entity;
			if (((previousValue != value) 
						|| (this._catagory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._catagory.Entity = null;
					previousValue.products.Remove(this);
				}
				this._catagory.Entity = value;
				if ((value != null))
				{
					value.products.Add(this);
					this._cat_id = value.id;
				}
				else
				{
					this._cat_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("catagory");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_product", Storage="_seller", ThisKey="seller_id", OtherKey="id", IsForeignKey=true)]
	public seller seller
	{
		get
		{
			return this._seller.Entity;
		}
		set
		{
			seller previousValue = this._seller.Entity;
			if (((previousValue != value) 
						|| (this._seller.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._seller.Entity = null;
					previousValue.products.Remove(this);
				}
				this._seller.Entity = value;
				if ((value != null))
				{
					value.products.Add(this);
					this._seller_id = value.id;
				}
				else
				{
					this._seller_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("seller");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_auction_finishes(auction_finish entity)
	{
		this.SendPropertyChanging();
		entity.product = this;
	}
	
	private void detach_auction_finishes(auction_finish entity)
	{
		this.SendPropertyChanging();
		entity.product = null;
	}
	
	private void attach_auction_regs(auction_reg entity)
	{
		this.SendPropertyChanging();
		entity.product = this;
	}
	
	private void detach_auction_regs(auction_reg entity)
	{
		this.SendPropertyChanging();
		entity.product = null;
	}
	
	private void attach_bid_transactions(bid_transaction entity)
	{
		this.SendPropertyChanging();
		entity.product = this;
	}
	
	private void detach_bid_transactions(bid_transaction entity)
	{
		this.SendPropertyChanging();
		entity.product = null;
	}
	
	private void attach_order_infos(order_info entity)
	{
		this.SendPropertyChanging();
		entity.product = this;
	}
	
	private void detach_order_infos(order_info entity)
	{
		this.SendPropertyChanging();
		entity.product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.seller")]
public partial class seller : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _name;
	
	private string _last_name;
	
	private int _cid;
	
	private int _sid;
	
	private int _ctid;
	
	private string _email_id;
	
	private string _address;
	
	private string _image_url;
	
	private string _phone_no;
	
	private EntitySet<auction_finish> _auction_finishes;
	
	private EntitySet<auction_reg> _auction_regs;
	
	private EntitySet<order_info> _order_infos;
	
	private EntitySet<product> _products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OnsidChanging(int value);
    partial void OnsidChanged();
    partial void OnctidChanging(int value);
    partial void OnctidChanged();
    partial void Onemail_idChanging(string value);
    partial void Onemail_idChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void Onphone_noChanging(string value);
    partial void Onphone_noChanged();
    #endregion
	
	public seller()
	{
		this._auction_finishes = new EntitySet<auction_finish>(new Action<auction_finish>(this.attach_auction_finishes), new Action<auction_finish>(this.detach_auction_finishes));
		this._auction_regs = new EntitySet<auction_reg>(new Action<auction_reg>(this.attach_auction_regs), new Action<auction_reg>(this.detach_auction_regs));
		this._order_infos = new EntitySet<order_info>(new Action<order_info>(this.attach_order_infos), new Action<order_info>(this.detach_order_infos));
		this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50)")]
	public string last_name
	{
		get
		{
			return this._last_name;
		}
		set
		{
			if ((this._last_name != value))
			{
				this.Onlast_nameChanging(value);
				this.SendPropertyChanging();
				this._last_name = value;
				this.SendPropertyChanged("last_name");
				this.Onlast_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Int NOT NULL")]
	public int cid
	{
		get
		{
			return this._cid;
		}
		set
		{
			if ((this._cid != value))
			{
				this.OncidChanging(value);
				this.SendPropertyChanging();
				this._cid = value;
				this.SendPropertyChanged("cid");
				this.OncidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Int NOT NULL")]
	public int sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				this.OnsidChanging(value);
				this.SendPropertyChanging();
				this._sid = value;
				this.SendPropertyChanged("sid");
				this.OnsidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctid", DbType="Int NOT NULL")]
	public int ctid
	{
		get
		{
			return this._ctid;
		}
		set
		{
			if ((this._ctid != value))
			{
				this.OnctidChanging(value);
				this.SendPropertyChanging();
				this._ctid = value;
				this.SendPropertyChanged("ctid");
				this.OnctidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_id", DbType="VarChar(50)")]
	public string email_id
	{
		get
		{
			return this._email_id;
		}
		set
		{
			if ((this._email_id != value))
			{
				this.Onemail_idChanging(value);
				this.SendPropertyChanging();
				this._email_id = value;
				this.SendPropertyChanged("email_id");
				this.Onemail_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string address
	{
		get
		{
			return this._address;
		}
		set
		{
			if ((this._address != value))
			{
				this.OnaddressChanging(value);
				this.SendPropertyChanging();
				this._address = value;
				this.SendPropertyChanged("address");
				this.OnaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string image_url
	{
		get
		{
			return this._image_url;
		}
		set
		{
			if ((this._image_url != value))
			{
				this.Onimage_urlChanging(value);
				this.SendPropertyChanging();
				this._image_url = value;
				this.SendPropertyChanged("image_url");
				this.Onimage_urlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="VarChar(50)")]
	public string phone_no
	{
		get
		{
			return this._phone_no;
		}
		set
		{
			if ((this._phone_no != value))
			{
				this.Onphone_noChanging(value);
				this.SendPropertyChanging();
				this._phone_no = value;
				this.SendPropertyChanged("phone_no");
				this.Onphone_noChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_auction_finish", Storage="_auction_finishes", ThisKey="id", OtherKey="s_id")]
	public EntitySet<auction_finish> auction_finishes
	{
		get
		{
			return this._auction_finishes;
		}
		set
		{
			this._auction_finishes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_auction_reg", Storage="_auction_regs", ThisKey="id", OtherKey="sid")]
	public EntitySet<auction_reg> auction_regs
	{
		get
		{
			return this._auction_regs;
		}
		set
		{
			this._auction_regs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_order_info", Storage="_order_infos", ThisKey="id", OtherKey="s_id")]
	public EntitySet<order_info> order_infos
	{
		get
		{
			return this._order_infos;
		}
		set
		{
			this._order_infos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_product", Storage="_products", ThisKey="id", OtherKey="seller_id")]
	public EntitySet<product> products
	{
		get
		{
			return this._products;
		}
		set
		{
			this._products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_auction_finishes(auction_finish entity)
	{
		this.SendPropertyChanging();
		entity.seller = this;
	}
	
	private void detach_auction_finishes(auction_finish entity)
	{
		this.SendPropertyChanging();
		entity.seller = null;
	}
	
	private void attach_auction_regs(auction_reg entity)
	{
		this.SendPropertyChanging();
		entity.seller = this;
	}
	
	private void detach_auction_regs(auction_reg entity)
	{
		this.SendPropertyChanging();
		entity.seller = null;
	}
	
	private void attach_order_infos(order_info entity)
	{
		this.SendPropertyChanging();
		entity.seller = this;
	}
	
	private void detach_order_infos(order_info entity)
	{
		this.SendPropertyChanging();
		entity.seller = null;
	}
	
	private void attach_products(product entity)
	{
		this.SendPropertyChanging();
		entity.seller = this;
	}
	
	private void detach_products(product entity)
	{
		this.SendPropertyChanging();
		entity.seller = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.state")]
public partial class state : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _cid;
	
	private int _sid;
	
	private string _sname;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OnsidChanging(int value);
    partial void OnsidChanged();
    partial void OnsnameChanging(string value);
    partial void OnsnameChanged();
    #endregion
	
	public state()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Int NOT NULL")]
	public int cid
	{
		get
		{
			return this._cid;
		}
		set
		{
			if ((this._cid != value))
			{
				this.OncidChanging(value);
				this.SendPropertyChanging();
				this._cid = value;
				this.SendPropertyChanged("cid");
				this.OncidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				this.OnsidChanging(value);
				this.SendPropertyChanging();
				this._sid = value;
				this.SendPropertyChanged("sid");
				this.OnsidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sname", DbType="VarChar(50)")]
	public string sname
	{
		get
		{
			return this._sname;
		}
		set
		{
			if ((this._sname != value))
			{
				this.OnsnameChanging(value);
				this.SendPropertyChanging();
				this._sname = value;
				this.SendPropertyChanged("sname");
				this.OnsnameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class StoredProcedure1Result
{
	
	private int _id;
	
	private string _NAME;
	
	private string _last;
	
	private string _email;
	
	private string _phone_no;
	
	private string _area_code;
	
	private System.Nullable<int> _cid;
	
	private System.Nullable<int> _sid;
	
	private System.Nullable<int> _ctid;
	
	private string _addrerss;
	
	private string _Password;
	
	public StoredProcedure1Result()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this._id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
	public string NAME
	{
		get
		{
			return this._NAME;
		}
		set
		{
			if ((this._NAME != value))
			{
				this._NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last", DbType="VarChar(50)")]
	public string last
	{
		get
		{
			return this._last;
		}
		set
		{
			if ((this._last != value))
			{
				this._last = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this._email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_no", DbType="VarChar(50)")]
	public string phone_no
	{
		get
		{
			return this._phone_no;
		}
		set
		{
			if ((this._phone_no != value))
			{
				this._phone_no = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area_code", DbType="VarChar(50)")]
	public string area_code
	{
		get
		{
			return this._area_code;
		}
		set
		{
			if ((this._area_code != value))
			{
				this._area_code = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Int")]
	public System.Nullable<int> cid
	{
		get
		{
			return this._cid;
		}
		set
		{
			if ((this._cid != value))
			{
				this._cid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", DbType="Int")]
	public System.Nullable<int> sid
	{
		get
		{
			return this._sid;
		}
		set
		{
			if ((this._sid != value))
			{
				this._sid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctid", DbType="Int")]
	public System.Nullable<int> ctid
	{
		get
		{
			return this._ctid;
		}
		set
		{
			if ((this._ctid != value))
			{
				this._ctid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addrerss", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string addrerss
	{
		get
		{
			return this._addrerss;
		}
		set
		{
			if ((this._addrerss != value))
			{
				this._addrerss = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this._Password = value;
			}
		}
	}
}

public partial class StoredProcedure3Result
{
	
	private System.Nullable<int> _Column1;
	
	public StoredProcedure3Result()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}
#pragma warning restore 1591
